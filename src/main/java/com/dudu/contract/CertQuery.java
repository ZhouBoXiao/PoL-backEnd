package com.dudu.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class CertQuery extends Contract {
    private static final String BINARY = "601460609081527f6465706c6f79204365727451756572792e2e2e2e000000000000000000000000608052600060a0819052602b60c09081527f5b3639643938643661303463343162343630356161636237626432663734626560e0527f655d5b3035766d6c6f675d0000000000000000000000000000000000000000006101005261016060405260016101209081527f7c00000000000000000000000000000000000000000000000000000000000000610140526100cc939291908290819081906100db90859061026b565b50611526806103ac6000396000f35b935061022d6102f2600160a060020a033016602060405190810160405280600081526020015060006000602a6040518059106101145750595b90808252806020026020018201604052801561012b575b50925082507f3000000000000000000000000000000000000000000000000000000000000000836000815181101561000257906020010190600160f860020a031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000836001815181101561000257906020010190600160f860020a031916908160001a905350602991505b600260ff83161061032a57506010830492600f16600a81101561033157806030017f010000000000000000000000000000000000000000000000000000000000000002838360ff16815181101561000257906020010190600160f860020a031916908160001a905350610381565b60408051808201909152600181527f7c0000000000000000000000000000000000000000000000000000000000000060208201529094506102f99085905b602060405190810160405280600081526020015060006000600084518651016040518059106102975750595b9080825280602002602001820160405280156102ae575b5093508350602086019250602085019150602084019050610312818488515b60005b6020821061038d578251845260209384019390920191601f19909101906102d0565b859061026b565b9350610305848761026b565b5060009695505050505050565b610321865182018387516102cd565b50505092915050565b5050919050565b600a81036061017f010000000000000000000000000000000000000000000000000000000000000002838360ff16815181101561000257906020010190600160f860020a031916908160001a9053505b600019909101906101bf565b50905182516020929092036101000a600019018019909116911617905256606060405260e060020a60003504632c3560ee811461004a57806378a9eeed146101ea578063e24f2ce71461021c578063e8c2807514610364578063f9fbd5541461037f575b610002565b34610002576104476004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f8101839004830284018301909452838352979998604498929750919091019450909250829150840183828082843750949650505050505050604080516020818101835260008083528351918201909352828152909190819081906104c3905b60408051602081810183526000918290528251606081018452602f8152600080516020611506833981519152918101919091527f655d5b3039537461636b507573685d00000000000000000000000000000000009281019290925290818080610e5f84875b6020604051908101604052806000815260200150600060006000845186510160405180591061018f5750595b9080825280602002602001820160405280156101a6575b50935083506020860192506020850191506020840190506112ec818488515b60005b602082106114d4578251845260209384019390920191601f19909101906101c8565b3461000257604080516020808201835260008083528351918201909352828152610447929081908190610a26906100fe565b34610002576104b56004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f810183900483028401830190945283835297999860449892975091909101945090925082915084018382808284375094965050505050505060408051808201909152601681527f436572746966696361746520696e746f206164642e2e000000000000000000006020820152610b099060408051602081810183526000918290528251606081018452602b8152600080516020611506833981519152818301527f655d5b3035766d6c6f675d0000000000000000000000000000000000000000008185015283518085019094526001845260fa60020a601f02918401919091529091829081908190611074908590610163565b34610002576000545b60408051918252519081900360200190f35b346100025761036d6004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496505050505050506000610e56826001600050600081548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106f45780601f106106c9576101008083540402835291602001916106f4565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b005b93505b50505092915050565b9250600090505b60005481101561054a576106498660016000508381548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106f45780601f106106c9576101008083540402835291602001916106f4565b6109da6109e5845b60408051602081810183526000808352835180830185528190528351808301855281815284518084018652828152855160608101875260308152600080516020611506833981519152948101949094527f655d5b3130537461636b506f7045785d000000000000000000000000000000008487015294519394929390928291829190829089908059106105e25750595b9080825280602002602001820160405280156105f9575b509550602086019450610f1c610f50865b6040805160208101909152600080825280808415156112fb57604080518082019091526001815260fc60020a600302602082015293505b505050919050565b60000b158061078057506107798660016000508381548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106f45780601f106106c9576101008083540402835291602001916106f4565b820191906000526020600020905b8154815290600101906020018083116106d757829003601f168201915b5050505050610701909190565b6000805b8351811080156107155750825181105b15610e7157828181518110156100025790602001015160f860020a900460f860020a02600160f860020a031916848281518110156100025790602001015160f860020a900460f860020a02600160f860020a0319161115610e845760019150610f05565b60000b6001145b801561088557506107fd8560016000508381548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106f45780601f106106c9576101008083540402835291602001916106f4565b60000b1580610885575061087d8560016000508381548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106f45780601f106106c9576101008083540402835291602001916106f4565b60000b600019145b156108c05760008211156108cb57604080518082019091526001815260fa60020a600b0260208201526108c890610971565b92506001909101905b6001016104ca565b92505b6108b760006000508281548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561096b5780601f106109405761010080835404028352916020019161096b565b820191906000526020600020905b81548152906001019060200180831161094e57829003601f168201915b50505050505b6040805160208181018352600091829052825160608101845260318152600080516020611506833981519152918101919091527f655d5b3131537461636b417070656e645d0000000000000000000000000000009281019290925290818080610e5f8487610163565b92506104b783610552565b8360408051808201909152600181527f7b000000000000000000000000000000000000000000000000000000000000006020820152600090610f57906100fe565b9250600090505b600054811015610a64576000821115610a7357604080518082019091526001815260fa60020a600b026020820152610a7090610971565b610af66109e584610552565b92505b610ae860006000508281548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561096b5780601f106109405761010080835404028352916020019161096b565b925060019182019101610a2d565b9250610b0183610552565b935050505090565b5060008054600181018083558281838015829011610b3857600083815260209020610b38918101908301610ba7565b5050509190906000526020600020900160008490919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0b57805160ff19168380011785555b50610c3b929150610bf3565b50506001015b80821115610c07576000818150805460018160011615610100020316600290046000825580601f10610bd95750610ba1565b601f016020900490600052602060002090810190610ba191905b80821115610c075760008155600101610bf3565b5090565b82800160010185558215610b95579182015b82811115610b95578251826000505591602001919060010190610c1d565b50505060016000508054806001018281815481835581811511610c6f57600083815260209020610c6f918101908301610cde565b5050509190906000526020600020900160008390919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d2e57805160ff19168380011785555b50610d5e929150610bf3565b50506001015b80821115610c07576000818150805460018160011615610100020316600290046000825580601f10610d105750610cd8565b601f016020900490600052602060002090810190610cd89190610bf3565b82800160010185558215610ccc579182015b82811115610ccc578251826000505591602001919060010190610d40565b5050604080518082018252601981527f61646420612063657274696669636174652073756363657373000000000000006020808301919091528251808401909352600983527f436572745175657279000000000000000000000000000000000000000000000090830152610e5192509060408051602081810183526000918290528251606081018452602b8152600080516020611506833981519152818301527f655d5b3035766d6c6f675d0000000000000000000000000000000000000000008185015283518085019094526001845260fa60020a601f029184019190915290918290819081906111e8908590610163565b505050565b60000b92915050565b80516020909101209695505050505050565b825184511115610eec5760019150610f05565b828181518110156100025790602001015160f860020a900460f860020a02600160f860020a031916848281518110156100025790602001015160f860020a900460f860020a02600160f860020a0319161015610ee4576000199150610f05565b600101610705565b825184511015610f00576000199150610f05565b600091505b5092915050565b8597505b50505050505050919050565b8051602080830182812060408051938401905260008352939a509750919550935091508390508015610f0c57819750610f10565b8890610163565b60408051808201909152600581527f746f74616c0000000000000000000000000000000000000000000000000000006020820152909150610fa29083600061106d8361139d8461060a565b60408051808201909152600981527f2c2264617461223a5b00000000000000000000000000000000000000000000006020820152909150610fe290610971565b9050610fed83610971565b60408051808201909152600181527f5d00000000000000000000000000000000000000000000000000000000000000602082015290915061102d90610971565b60408051808201909152600181527f7d00000000000000000000000000000000000000000000000000000000000000602082015290915061106d90610971565b9392505050565b935061119f6111c873ffffffffffffffffffffffffffffffffffffffff30165b602060405190810160405280600081526020015060006000602a6040518059106110bb5750595b9080825280602002602001820160405280156110d2575b509250825060fc60020a600302836000815181101561000257906020010190600160f860020a031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000836001815181101561000257906020010190600160f860020a031916908160001a905350602991505b600260ff83161061143c57506010830492600f16600a811015611443578060300160f860020a02838360ff16815181101561000257906020010190600160f860020a031916908160001a905350611477565b604080518082019091526001815260fa60020a601f0260208201529094506111cf908590610163565b8590610163565b93506111db8487610163565b5060009695505050505050565b935061120c6111c873ffffffffffffffffffffffffffffffffffffffff3016611094565b604080518082019091526001815260fa60020a601f026020820152909450611235908590610163565b604080518082019091526001815260fd60020a60208201529094506112de9085908990895b6020604051908101604052806000815260200150600060006000600060006000875189518b518d510101016040518059106112925750595b9080825280602002602001820160405280156112a9575b509650865060208b01955060208a01945060208901935060208801925060208701915060009050611483818301878d516101c5565b506000979650505050505050565b6104ba865182018387516101c5565b600092508491505b600082111561131d57600a82600190940193049150611303565b8260ff1660405180591061132e5750595b908082528060200260200182016040528015611345575b5093505060001982015b600085111561064157600a850660300160f860020a0284828060019003935060ff16815181101561000257906020010190600160f860020a031916908160001a905350600a8504945061134f565b6040805160208181018352600091829052825160608101845260398152600080516020611506833981519152818301527f655d5b3139537461636b417070656e644b657956616c75655d00000000000000818501528351808501909452600a84527f7c242526402a5e23217c000000000000000000000000000000000000000000009184019190915290918290819081906114f390859089908961125a565b5050919050565b600a810360610160f860020a02838360ff16815181101561000257906020010190600160f860020a031916908160001a9053505b6000199091019061114d565b8a51810190508050611499818301868c516101c5565b89518101905080506114af818301858b516101c5565b88518101905080506114c5818301848a516101c5565b50949998505050505050505050565b50905182516020929092036101000a6000190180199091169116179052565b8051602090910120979650505050505050565b36396439386436613034633431623436303561616362376264326637346265";

    public static final String FUNC_SEARCH = "search";

    public static final String FUNC_LISTALL = "listAll";

    public static final String FUNC_ADDCERTIFICATE = "addCertificate";

    public static final String FUNC_SUMOFCERTS = "sumOfCerts";

    public static final String FUNC_TEST = "test";

    @Deprecated
    protected CertQuery(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CertQuery(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CertQuery(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CertQuery(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> search(String startTime, String endTime) {
        final Function function = new Function(FUNC_SEARCH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(startTime), 
                new org.web3j.abi.datatypes.Utf8String(endTime)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> listAll() {
        final Function function = new Function(FUNC_LISTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addCertificate(String json, String issuanceDate) {
        final Function function = new Function(
                FUNC_ADDCERTIFICATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(json), 
                new org.web3j.abi.datatypes.Utf8String(issuanceDate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> sumOfCerts() {
        final Function function = new Function(FUNC_SUMOFCERTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> test(String startTime) {
        final Function function = new Function(FUNC_TEST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(startTime)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static CertQuery load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertQuery(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CertQuery load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertQuery(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CertQuery load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CertQuery(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CertQuery load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CertQuery(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CertQuery> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertQuery.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<CertQuery> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertQuery.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertQuery> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertQuery.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertQuery> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertQuery.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}

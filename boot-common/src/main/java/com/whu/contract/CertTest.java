package com.whu.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class CertTest extends Contract {
    private static final String BINARY = "60606040526114f1806100126000396000f3606060405260e060020a600035046303447e98811461004a5780632c3560ee1461020d57806378a9eeed146102ca578063e24f2ce714610363578063e8c280751461041d575b610002565b34610002576104376004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750949650505050505050602060405190810160405280600081526020015060006000600060006000600060005087604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050908152602001604051809103902060005094506000935084805490509250600091506104a760206040519081016040528060008152602001505b60408051602081810183526000918290528251606081018452602f81526000805160206114d1833981519152918101919091527f655d5b3039537461636b507573685d0000000000000000000000000000000000928101929092529081808061105f84875b602060405190810160405280600081526020015060006000600084518651016040518059106101b25750595b9080825280602002602001820160405280156101c9575b5093508350602086019250602085019150602084019050611276818488515b60005b6020821061144e578251845260209384019390920191601f19909101906101eb565b34610002576104376004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f810183900483028401830190945283835297999860449892975091909101945090925082915084018382808284375050604080516020818101835260008083528351918201909352828152969850965094859450849350839250829150819061070a90610121565b34610002576104375b60408051602081810183526000808352835191820190935282815290919081908190610d4f905b60408051602081810183526000918290528251606081018452603181526000805160206114d1833981519152918101919091527f655d5b3131537461636b417070656e645d000000000000000000000000000000928101929092529081808061105f8487610186565b34610002576104a56004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f8101839004830284018301909452838352979998604498929750919091019450909250829150840183828082843750949650505050505050600180548082018083558281838015829011610e3257600083815260209020610e32918101908301610ea1565b346100025760015460408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b005b9350600090505b828110156104e35760008211156105fe57604080518082019091526001815260fa60020a600b0260208201526105fb906102fa565b6106b26106bd855b604080516020818101835260008083528351808301855281905283518083018552818152845180840186528281528551606081018752603081526000805160206114d1833981519152948101949094527f655d5b3130537461636b506f7045785d0000000000000000000000000000000084870152945193949293909282918291908290899080591061057b5750595b908082528060200260200182016040528015610592575b5095506020860194506110816110b5865b60408051602081019091526000808252808084151561128e5760408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015293505b505050919050565b93505b61066f858281548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106a85780601f1061067d576101008083540402835291602001916106a8565b9350600191820191016104ae565b820191906000526020600020905b81548152906001019060200180831161068b57829003601f168201915b50505050506102fa565b93506106ff846104eb565b835b60408051808201909152600181527f7b0000000000000000000000000000000000000000000000000000000000000060208201526000906110c590610121565b979650505050505050565b600154604080516020810190915260008082529099509197509094509250838311156107a95760006107b58a6002600050600081548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b610d44610d2f876104eb565b60000b121580156108f55750600280546000916108ef918b91906000198101908110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b820191906000526020600020905b81548152906001019060200180831161084d57829003601f168201915b5050505050610877909190565b6000805b83518110801561088b5750825181105b156111db57828181518110156100025790602001015160f860020a900460f860020a02600160f860020a031916848281518110156100025790602001015160f860020a900460f860020a02600160f860020a03191611156111ee576001915061126f565b60000b13155b15610ba9576109026102d3565b9650610d38565b60000b13155b15610a96575b50825b82811015610bd3576000610bdf8a60026000508481548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b91506000610a128a60026000508581548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b60000b1215801561090f575060006109098960026000508581548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b6000610b0e8a60026000508581548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b60000b1215610b2257600182019350610ba9565b6000610b9a8960026000508581548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b60000b1315610ba95781925082505b828410156109155761099884846000600280840681840601046002830460028504010190506110bf565b610d24610d2f876104eb565b60000b12158015610c6957506000610c638960026000508481548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561086a5780601f1061083f5761010080835404028352916020019161086a565b60000b13155b15610ca4576000851115610caf57604080518082019091526001815260fa60020a600b026020820152610cac906102fa565b95506001909401935b600101610918565b95505b610c9b60016000508281548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106a85780601f1061067d576101008083540402835291602001916106a8565b9550610902866104eb565b866106bf565b96505b50505050505092915050565b9550610d35866104eb565b9250600090505b600154811015610d8d576000821115610d9c57604080518082019091526001815260fa60020a600b026020820152610d99906102fa565b610e1f6106bd846104eb565b92505b610e1160016000508281548110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f810185900485028301850190915280825290928301828280156106a85780601f1061067d576101008083540402835291602001916106a8565b925060019182019101610d56565b9250610e2a836104eb565b935050505090565b5050509190906000526020600020900160008490919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f0557805160ff19168380011785555b50610f35929150610eed565b50506001015b80821115610f01576000818150805460018160011615610100020316600290046000825580601f10610ed35750610e9b565b601f016020900490600052602060002090810190610e9b91905b80821115610f015760008155600101610eed565b5090565b82800160010185558215610e8f579182015b82811115610e8f578251826000505591602001919060010190610f17565b50505060026000508054806001018281815481835581811511610f6957600083815260209020610f69918101908301610fd8565b5050509190906000526020600020900160008390919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061102857805160ff19168380011785555b50611058929150610eed565b50506001015b80821115610f01576000818150805460018160011615610100020316600290046000825580601f1061100a5750610fd2565b601f016020900490600052602060002090810190610fd29190610eed565b82800160010185558215610fc6579182015b82811115610fc657825182600050559160200191906001019061103a565b5050505050565b80516020909101209695505050505050565b8597505b50505050505050919050565b8051602080830182812060408051938401905260008352939a50975091955093509150839050801561107157819750611075565b8890610186565b90505b92915050565b60408051808201909152600581527f746f74616c0000000000000000000000000000000000000000000000000000006020820152909150611110908360006110bc83611330846105a3565b60408051808201909152600981527f2c2264617461223a5b00000000000000000000000000000000000000000000006020820152909150611150906102fa565b905061115b836102fa565b60408051808201909152600181527f5d00000000000000000000000000000000000000000000000000000000000000602082015290915061119b906102fa565b60408051808201909152600181527f7d0000000000000000000000000000000000000000000000000000000000000060208201529091506110bc906102fa565b825184511115611256576001915061126f565b828181518110156100025790602001015160f860020a900460f860020a02600160f860020a031916848281518110156100025790602001015160f860020a900460f860020a02600160f860020a031916101561124e57600019915061126f565b60010161087b565b82518451101561126a57600019915061126f565b600091505b5092915050565b611285865182018387516101e8565b50505092915050565b600092508491505b60008211156112b057600a82600190940193049150611296565b8260ff166040518059106112c15750595b9080825280602002602001820160405280156112d8575b5093505060001982015b60008511156105f357600a850660300160f860020a0284828060019003935060ff16815181101561000257906020010190600160f860020a031916908160001a905350600a850494506112e2565b60408051602081810183526000918290528251606081018452603981526000805160206114d1833981519152818301527f655d5b3139537461636b417070656e644b657956616c75655d00000000000000818501528351808501909452600a84527f7c242526402a5e23217c0000000000000000000000000000000000000000000091840191909152909182908190819061146d9085908990896020604051908101604052806000815260200150600060006000600060006000875189518b518d510101016040518059106114025750595b908082528060200260200182016040528015611419575b509650865060208b01955060208a01945060208901935060208801925060208701915060009050611480818301878d516101e8565b50905182516020929092036101000a6000190180199091169116179052565b8051602090910120979650505050505050565b8a51810190508050611496818301868c516101e8565b89518101905080506114ac818301858b516101e8565b88518101905080506114c2818301848a516101e8565b50949998505050505050505050565b36396439386436613034633431623436303561616362376264326637346265";

    public static final String FUNC_SEARCHBYLOCCODE = "searchByLocCode";

    public static final String FUNC_SEARCH = "search";

    public static final String FUNC_LISTALL = "listAll";

    public static final String FUNC_ADDCERTIFICATE = "addCertificate";

    public static final String FUNC_SUMOFCERTS = "sumOfCerts";

    @Deprecated
    protected CertTest(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CertTest(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CertTest(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CertTest(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> searchByLocCode(String locCode) {
        final Function function = new Function(FUNC_SEARCHBYLOCCODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(locCode)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> search(String startTime, String endTime) {
        final Function function = new Function(FUNC_SEARCH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(startTime), 
                new org.web3j.abi.datatypes.Utf8String(endTime)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> listAll() {
        final Function function = new Function(FUNC_LISTALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addCertificate(String json, String issuanceDate) {
        final Function function = new Function(
                FUNC_ADDCERTIFICATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(json), 
                new org.web3j.abi.datatypes.Utf8String(issuanceDate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> sumOfCerts() {
        final Function function = new Function(FUNC_SUMOFCERTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static CertTest load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertTest(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CertTest load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertTest(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CertTest load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CertTest(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CertTest load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CertTest(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CertTest> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertTest.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertTest> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertTest.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<CertTest> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertTest.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertTest> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertTest.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
